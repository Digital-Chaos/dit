FILES
name suffix .tl
name suffix .lua
name suffix .rockspec
firstline regex ^#!.*lua.*
RULES   
script lua.lua

include gitconflict.dithlinc

rule and      bright
rule break    bright
rule do       bright
rule else     bright
rule elseif   bright
rule end      bright
rule false    bright
rule for      bright
rule function bright
rule if       bright
rule in       bright
rule local    bright
rule nil      bright
rule not      bright
rule or       bright
rule repeat   bright
rule return   bright
rule then     bright
rule true     bright
rule until    bright
rule while    bright
rule ...      bright

rule [ symbol
rule ] symbol
rule { symbol
rule } symbol
rule ( symbol
rule ) symbol
rule : symbol
rule , symbol

rule #  brightsymbol
rule .. brightsymbol
rule ^  brightsymbol
rule <  brightsymbol
rule >  brightsymbol
rule =  brightsymbol
rule +  brightsymbol
rule -  brightsymbol
rule *  brightsymbol
rule /  brightsymbol
rule %% brightsymbol
rule ~= brightsymbol

rule ; brightalt

rule --[[ dim
rule -- dim
rule \" alt
rule ' alt
rule [[ alt

context function `$ bright bright normal
   rule function bright
   context ( `$ bright bright normal
      rule :`s`*`[a`-zA`-Z_{}->|`]`* diff
      rule ( bright
      rule ) bright
      context ) `$ bright bright diff
      /context
   /context
/context

context --[[ ]] dim
/context

context --[=[ ]=] dim
/context

context --[==[ ]==] dim
/context

context --[===[ ]===] dim
/context

context -- `$ dim
/context

context " " alt
   rule \\ brightalt
   rule \" brightalt
   eager_rule \`[abcfnrtv`] brightalt
   rule " alt
/context

context ' ' alt
   rule \\ brightalt
   rule \' brightalt
   eager_rule \`[abcfnrtv`] brightalt
   rule ' alt
/context

context [[ ]] alt
   rule \\ brightalt
   eager_rule \`[abcfnrtv`] brightalt
   rule ]] alt
/context

context [=[ ]=] alt
   rule \\ brightalt
   eager_rule \`[abcfnrtv`] brightalt
   rule ]=] alt
/context

context [==[ ]==] alt
   rule \\ brightalt
   eager_rule \`[abcfnrtv`] brightalt
   rule ]==] alt
/context

context [===[ ]===] alt
   rule \\ brightalt
   eager_rule \`[abcfnrtv`] brightalt
   rule ]===] alt
/context

