#!/bin/bash

prog=$1
shift

if [ -e libefence.a ]
then EFENCE=libefence.a
else EFENCE=
fi

OBJS=$(
for i in *.c
do
   echo -n `basename $i .c`.o" "
done
echo
)
LIBS=$(
{
for i in *.c
do
   grep "^//#link " $i | cut -d" " -f2- | tr " " "\n"
done
} | sort -u | while read i
do
   echo -n "-l$i "
done
)
optlinks=`mktemp /tmp/tmp.XXXXXX`
{
for i in *.c
do
   grep "^//#optlink " $i | cut -d" " -f2- | tr " " "\n"
done
} | sort -u > $optlinks
LIBS=$LIBS$(
cat $optlinks | while read i
do
   echo "$@" | grep -q -- "--with-$i" && echo -n "-l$i"
done
)
DEFINES=$(
cat $optlinks | while read i
do
   I=`echo $i | tr '[:lower:]' '[:upper:]'`
   echo "$@" | grep -q -- "--with-$i" && echo -n "-DUSE_$I"
done
)

echo
echo "prefix=/usr"
echo 'bindir=$(prefix)/bin'
echo "OBJS=$OBJS"
echo "HEADERS=Prototypes.h Structures.h"
echo "LIBS=$LIBS"
echo "MYCFLAGS=-pedantic -Wall -Werror -std=c99 "$DEFINES
echo ".PHONY=clean debug"
echo
echo 'all: MYCFLAGS += -O3 -finline-functions -finline-limit=1200'
echo 'all: '$prog
echo '	strip '$prog
echo
echo 'debug: MYCFLAGS += -g -DDEBUG'
echo 'debug: LIBS += '$EFENCE' -lpthread'
echo 'debug: '$prog
echo
echo 'debuglite: MYCFLAGS += -g -DDEBUGLITE'
echo 'debuglite: LIBS += '$EFENCE' -lpthread'
echo 'debuglite: '$prog
echo
echo 'gcov: MYCFLAGS += -fprofile-arcs -ftest-coverage'
echo 'gcov: '$prog
echo
echo $prog': $(OBJS)'
#echo $prog': debug.h $(OBJS)'
echo '	gcc $(MYCFLAGS) -o '$prog' $(OBJS) $(LIBS)'
echo
#echo 'debug.h: debug.h.in DebugMemory.h'
#echo '	cp debug.h.in debug.h'
echo
echo 'profile: MYCFLAGS += -pg -O3'
echo 'profile: '$prog
echo
echo 'clean:'
echo '	rm -f core* '$prog' $(OBJS) $(HEADERS) *.gcov *.bb *.bbg *.da order.txt'
echo
echo 'install:'
echo '	mkdir -p $(bindir)'
echo '	cp '$prog' $(bindir)'
echo
for i in *.c
do
   b=`basename $i .c`
   echo $b'.o: '$i' $(HEADERS)'
   echo '	gcc $(MYCFLAGS) -c '$i
   echo
done
